[tool.poetry]
name = "pageloot-task"
version = "0.1.0"
description = ""
authors = ["Alexandr Zhydyk <zhydykalex@ukr.net>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.13"
django = "^5.2.7"
djangorestframework = "^3.16.1"
django-filter = "^25.2"
pre-commit = "^4.3.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.14.1"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "**/migrations/*.py",
    ".git",
    "__pycache__/",
    ".idea/",
    ".log",
    "server/app/asgi.py"
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.11
target-version = "py313"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
select = ["A", "B", "E", "F", "UP"]
ignore = ["A003", "E402", "E722", "B904", "A001", "A002", "B010", "F403", "B018", "F405", "B009", "B007"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = [
    "E", "F",
    "F401", # Remove unused imports.
]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


